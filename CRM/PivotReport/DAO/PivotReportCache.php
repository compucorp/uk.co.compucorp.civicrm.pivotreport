<?php
/*
+--------------------------------------------------------------------+
| CiviCRM version 4.7                                                |
+--------------------------------------------------------------------+
| Copyright CiviCRM LLC (c) 2004-2017                                |
+--------------------------------------------------------------------+
| This file is a part of CiviCRM.                                    |
|                                                                    |
| CiviCRM is free software; you can copy, modify, and distribute it  |
| under the terms of the GNU Affero General Public License           |
| Version 3, 19 November 2007 and the CiviCRM Licensing Exception.   |
|                                                                    |
| CiviCRM is distributed in the hope that it will be useful, but     |
| WITHOUT ANY WARRANTY; without even the implied warranty of         |
| MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               |
| See the GNU Affero General Public License for more details.        |
|                                                                    |
| You should have received a copy of the GNU Affero General Public   |
| License and the CiviCRM Licensing Exception along                  |
| with this program; if not, contact CiviCRM LLC                     |
| at info[AT]civicrm[DOT]org. If you have questions about the        |
| GNU Affero General Public License or the licensing of CiviCRM,     |
| see the CiviCRM license FAQ at http://civicrm.org/licensing        |
+--------------------------------------------------------------------+
*/
/**
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2017
 *
 * Generated from xml/schema/CRM/PivotReport/PivotReportCache.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 * (GenCodeChecksum:52feab1578d6a9b997c39a7df0e4391e)
 */
require_once 'CRM/Core/DAO.php';
require_once 'CRM/Utils/Type.php';
/**
 * CRM_PivotReport_DAO_PivotReportCache constructor.
 */
class CRM_PivotReport_DAO_PivotReportCache extends CRM_Core_DAO {
  /**
   * Static instance to hold the table name.
   *
   * @var string
   */
  static $_tableName = 'civicrm_pivotreport_cache';
  /**
   * Should CiviCRM log any modifications to this table in the civicrm_log table.
   *
   * @var boolean
   */
  static $_log = true;
  /**
   * Unique PivotReportCache ID
   *
   * @var int unsigned
   */
  public $id;
  /**
   * Group name for cache element, useful in separating each available entity's cache
   *
   * @var string
   */
  public $group_name;
  /**
   * Unique path name for cache element
   *
   * @var string
   */
  public $path;
  /**
   * Data associated with this path
   *
   * @var longtext
   */
  public $data;
  /**
   * When was the cache item created
   *
   * @var timestamp
   */
  public $created_date;
  /**
   * When should the cache item expire
   *
   * @var timestamp
   */
  public $expired_date;
  /**
   * Is the cache entry active?
   *
   * @var boolean
   */
  public $is_active;
  /**
   * Source of the cache row
   *
   * @var int
   */
  public $source;
  /**
   * Class constructor.
   */
  function __construct() {
    $this->__table = 'civicrm_pivotreport_cache';
    parent::__construct();
  }
  /**
   * Returns all the column names of this table
   *
   * @return array
   */
  static function &fields() {
    if (!isset(Civi::$statics[__CLASS__]['fields'])) {
      Civi::$statics[__CLASS__]['fields'] = array(
        'id' => array(
          'name' => 'id',
          'type' => CRM_Utils_Type::T_INT,
          'description' => 'Unique PivotReportCache ID',
          'required' => true,
          'table_name' => 'civicrm_pivotreport_cache',
          'entity' => 'PivotReportCache',
          'bao' => 'CRM_PivotReport_DAO_PivotReportCache',
          'localizable' => 0,
        ) ,
        'group_name' => array(
          'name' => 'group_name',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => ts('Group Name') ,
          'description' => 'Group name for cache element, useful in separating each available entity\'s cache',
          'required' => true,
          'maxlength' => 32,
          'size' => CRM_Utils_Type::MEDIUM,
          'table_name' => 'civicrm_pivotreport_cache',
          'entity' => 'PivotReportCache',
          'bao' => 'CRM_PivotReport_DAO_PivotReportCache',
          'localizable' => 0,
        ) ,
        'path' => array(
          'name' => 'path',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => ts('Path') ,
          'description' => 'Unique path name for cache element',
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'table_name' => 'civicrm_pivotreport_cache',
          'entity' => 'PivotReportCache',
          'bao' => 'CRM_PivotReport_DAO_PivotReportCache',
          'localizable' => 0,
        ) ,
        'data' => array(
          'name' => 'data',
          'type' => CRM_Utils_Type::T_LONGTEXT,
          'title' => ts('Data') ,
          'description' => 'Data associated with this path',
          'table_name' => 'civicrm_pivotreport_cache',
          'entity' => 'PivotReportCache',
          'bao' => 'CRM_PivotReport_DAO_PivotReportCache',
          'localizable' => 0,
        ) ,
        'created_date' => array(
          'name' => 'created_date',
          'type' => CRM_Utils_Type::T_TIMESTAMP,
          'title' => ts('Created Date') ,
          'description' => 'When was the cache item created',
          'default' => 'CURRENT_TIMESTAMP',
          'table_name' => 'civicrm_pivotreport_cache',
          'entity' => 'PivotReportCache',
          'bao' => 'CRM_PivotReport_DAO_PivotReportCache',
          'localizable' => 0,
        ) ,
        'expired_date' => array(
          'name' => 'expired_date',
          'type' => CRM_Utils_Type::T_TIMESTAMP,
          'title' => ts('Expired Date') ,
          'description' => 'When should the cache item expire',
          'required' => false,
          'default' => 'NULL',
          'table_name' => 'civicrm_pivotreport_cache',
          'entity' => 'PivotReportCache',
          'bao' => 'CRM_PivotReport_DAO_PivotReportCache',
          'localizable' => 0,
        ) ,
        'is_active' => array(
          'name' => 'is_active',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => ts('Is active?') ,
          'description' => 'Is the cache entry active?',
          'required' => false,
          'default' => 0,
          'table_name' => 'civicrm_pivotreport_cache',
          'entity' => 'PivotReportCache',
          'bao' => 'CRM_PivotReport_DAO_PivotReportCache',
          'localizable' => 0,
        ) ,
        'source' => array(
          'name' => 'source',
          'type' => CRM_Utils_Type::T_INT,
          'title' => ts('Source of the cache row') ,
          'description' => 'Source of the cache row (1 - rebuildcache, 2 - rebuildcachechunk, 3 - PivotReport Admin UI)',
          'required' => false,
          'default' => 'NULL',
          'table_name' => 'civicrm_pivotreport_cache',
          'entity' => 'PivotReportCache',
          'bao' => 'CRM_PivotReport_DAO_PivotReportCache',
          'localizable' => 0,
        ) ,
      );
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'fields_callback', Civi::$statics[__CLASS__]['fields']);
    }
    return Civi::$statics[__CLASS__]['fields'];
  }
  /**
   * Return a mapping from field-name to the corresponding key (as used in fields()).
   *
   * @return array
   *   Array(string $name => string $uniqueName).
   */
  static function &fieldKeys() {
    if (!isset(Civi::$statics[__CLASS__]['fieldKeys'])) {
      Civi::$statics[__CLASS__]['fieldKeys'] = array_flip(CRM_Utils_Array::collect('name', self::fields()));
    }
    return Civi::$statics[__CLASS__]['fieldKeys'];
  }
  /**
   * Returns the names of this table
   *
   * @return string
   */
  static function getTableName() {
    return self::$_tableName;
  }
  /**
   * Returns if this table needs to be logged
   *
   * @return boolean
   */
  function getLog() {
    return self::$_log;
  }
  /**
   * Returns the list of fields that can be imported
   *
   * @param bool $prefix
   *
   * @return array
   */
  static function &import($prefix = false) {
    $r = CRM_Core_DAO_AllCoreTables::getImports(__CLASS__, 'pivotreportcache', $prefix, array());
    return $r;
  }
  /**
   * Returns the list of fields that can be exported
   *
   * @param bool $prefix
   *
   * @return array
   */
  static function &export($prefix = false) {
    $r = CRM_Core_DAO_AllCoreTables::getExports(__CLASS__, 'pivotreportcache', $prefix, array());
    return $r;
  }
  /**
   * Returns the list of indices
   */
  public static function indices($localize = TRUE) {
    $indices = array(
      'UI_group_path' => array(
        'name' => 'UI_group_path',
        'field' => array(
          0 => 'group_name',
          1 => 'path',
        ) ,
        'localizable' => false,
        'unique' => true,
        'sig' => 'civicrm_pivotreport_cache::1::group_name::path',
      ) ,
      'UI_group_path_date' => array(
        'name' => 'UI_group_path_date',
        'field' => array(
          0 => 'group_name',
          1 => 'path',
          2 => 'created_date',
        ) ,
        'localizable' => false,
        'unique' => true,
        'sig' => 'civicrm_pivotreport_cache::1::group_name::path::created_date',
      ) ,
    );
    return ($localize && !empty($indices)) ? CRM_Core_DAO_AllCoreTables::multilingualize(__CLASS__, $indices) : $indices;
  }
}
